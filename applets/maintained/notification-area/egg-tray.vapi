/* egg-tray.vapi was generated by vapigen, 
 *   but it was pain, feel free to modify by hand.
 */

[CCode (cprefix = "EggTray", lower_case_cprefix = "egg_tray_")]
namespace EggTray {
	[CCode (cheader_filename = "egg-tray-child.h")]
	public class Child : Gtk.Socket, Gtk.Buildable, Atk.Implementor {
		public uint fake_transparency;
		public X.Window icon_window;
		public weak Gtk.Socket parent_instance;
		public uint parent_relative_bg;
		public void force_redraw ();
		public string get_title ();
		public bool is_alpha_capable ();
                public Cairo.Surface get_image_surface ();
		[CCode (type = "GtkWidget*", has_construct_function = false)]
		public Child (Gdk.Screen screen, X.Window icon_window);
	}
	[CCode (cheader_filename = "eggtraymanager.h")]
	public class Manager : GLib.Object {
		public weak Gtk.Widget invisible;
		public X.Atom message_data_atom;
		public weak GLib.List messages;
		public X.Atom opcode_atom;
		public X.Atom orientation_atom;
		public weak GLib.Object parent_instance;
		public weak Gdk.Screen screen;
		public X.Atom selection_atom;
		public weak GLib.HashTable socket_table;
		public static bool check_running (Gdk.Screen screen);
		public Gtk.Orientation get_orientation ();
		public bool manage_screen (Gdk.Screen screen);
		[CCode (has_construct_function = false)]
		public Manager ();
		public void set_orientation (Gtk.Orientation orientation);
		public Gtk.Orientation orientation { get; set construct; }
		public virtual signal void lost_selection ();
		public virtual signal void message_cancelled (Gtk.Widget object, long p0);
		public virtual signal void message_sent (Gtk.Socket object, string p0, long p1, long p2);
		public virtual signal void tray_icon_added (Gtk.Widget object);
		public virtual signal void tray_icon_removed (Gtk.Widget object);
	}
}
